/* default for page */
.wrapper {
    /* results table font size */
    --tableFontSize: 1.25rem;
    --recordValueCellHeight: calc(var(--tableFontSize)*1.3);
    --recordsFontRatio: 0.9;
    --defaultLeaderFillerHeight: 1.75em;
    --bottomSpacerHeight: 0em;

    font-family: Arial, Helvetica, sans-serif;
    color: var(--pageTextColor);
    background-color: var(--pageBackgroundColor);
    background-image: var(--pageBackgroundImage);

    min-height: 100vh;
    /* padding: 1vmin 2vmin 2vmin 2vmin; */
    padding-block-start: 1vmin;
    padding-inline: 2vmin; /* Assuming L/R are equal */
    padding-block-end: 2vmin;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    /* move to top */
    justify-content: flex-start;
    flex-wrap: wrap;
    /* center horizontally */
    align-content: space-around;

    line-height: unset;
}

.blockPositioningWrapper {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    width: var(--tableWidthRatio, 90%);
}

.waiting {
    font-size: 1rem;
    font-weight: 600;
    font-family: 'Roboto Slab', serif;
    background-color: var(--videoHeaderBackgroundColor);
    color: var(--videoHeaderTextColor);
    padding: 1rem;
    display: flex;
    flex-grow: 1;
    align-items: center;
    justify-items: center;
}

.waiting .nextGroup {
    font-size: 3rem;
}

.video {
    font-size: 2rem;
    font-weight: 600;
    font-family: 'Roboto Slab', serif;
    background-color: var(--videoHeaderBackgroundColor);
    color: var(--videoHeaderTextColor);
    margin-block-end: 1.2rem;
    display: flex;
    align-items: center;
    justify-items: center;
    flex-grow: 1;
    text-align: center;
}


.video .videoheader {
    display: grid;
    align-self: center;
    justify-self: center;
    justify-content: center;
    align-items: center;
    flex-grow: 1;
    flex-direction: column;
    text-align: center;
	border-style: solid;
	border-width: 1px;
	border-color: var(--videoHeaderBackgroundColor);;
}

.video .eventlogo {
    background-image: url('../../logos/leftASU.svg');
    background-size: contain;
    background-repeat: no-repeat;
    width: 160px;
    height: 120px;
    background-position-y: center;
	background-position-x: left;
	border-style: solid;
	border-width: 2px;
	border-color: var(--videoHeaderBackgroundColor);
	margin: 2px;
}

/*
.video .eventlogo {
    background-image: url('../../logos/left.svg');
    background-color: white;
    background-size: contain;
    background-repeat: no-repeat;
    background-position-y: center;
    background-position-x: center;
    border-style: solid;
    border-width: 10px;
    border-color: white;
    margin: 10px;
    padding: 50px;
    zoom: 90%;
}
*/

.video .federationlogo {
    background-image: url('../../logos/rightASU.svg');
    background-size: contain;
    background-repeat: no-repeat;
    width: 160px;
    height: 120px;
    background-position-y: center;
	background-position-x: right;
	border-style: solid;
	border-width: 2px;
	margin: 2px;
	border-color: var(--videoHeaderBackgroundColor);
}


/*
.video .federationlogo {
    background-image: url('../../logos/right.svg');
    background-color: white;
    background-size: contain;
    background-repeat: no-repeat;
    background-position-y: center;
    background-position-x: center;
    border-style: solid;
    border-width: 10px;
    border-color: white;
    margin: 10px;
    padding: 50px;
    zoom: 90%;
}
*/


.flags img {
    border: 1px;
    border-color: black;
    border-style: solid;
}

/* table general parameters
  by default, show total and total rank, show lift ranks, do not show sinclair */
table.results {
    border-collapse: collapse;
    font-size: var(--tableFontSize);
    --totalWidth: var(--liftResultWidth);
    --totalVisibility: visible;
    --rankWidth: var(--liftResultWidth);
    --rankVisibility: visible;
    /* do not use rankWidth since we set it to 0 */
    --totalRankWidth: var(--liftResultWidth);
    --totalRankVisibility: visible;
    --sinclairWidth: 0;
    --sinclairVisibility: hidden;
    --sinclairRankWidth: 0;
    --sinclairRankVisibility: hidden;
}

table.results.ranks {
    --rankWidth: var(--liftResultWidth);
    --rankVisibility: visible;
}

table.results.noranks {
    --rankWidth: 0;
    --rankVisibility: hidden;
}

table.visit.totalRank {
    /* do not use rankWidth since we set it to 0 */
    --totalRankWidth: var(--liftResultWidth);
    --totalRankVisibility: visible;
}

table.results.nototalRank {
    --totalRankWidth: 0;
    --totalRankVisibility: hidden;
}

table.results.nosinclair {
    --sinclairWidth: 0;
    --sinclairVisibility: hidden;
}

table.results.sinclair {
/*     --rankWidth: 0;
    --rankVisibility: hidden;
    --totalRankWidth: 0;
    --totalRankVisibility: hidden; */
    --sinclairWidth: 8ch;
    --sinclairVisibility: visible;
}

table.results.sinclair.sinclairRank {
    --sinclairRankWidth: var(--liftResultWidth);
    --sinclairRankVisibility: visible;
}

table.results.sinclair.nosinclairRank {
    --sinclairRankWidth: 0;
    --sinclairRankVisibility: hidden;
}

/* default cell colors, backgrounds and borders */
:host table.results tr td,
:host table.results tr th {
    align-items: center;
    background-color: var(--BackgroundColor);
    color: var(--TextColor);
    border-width: 1px;
    border-style: solid;
    border-color: var(--TableBorders);
    justify-content: center;
    font-weight: bold;
}

:host .dark table.results tr td,
:host .dark table.results tr th {
    margin-bottom: var(--rowSmallSpacerHeight);
}

/* start */
:host table.results tr td.start {
    background-color: var(--StartBackgroundColor);
    color: var(--StartTextColor);
    visibility: var(--startVisibility);
}

/* name */
:host table.results tr td.name {
    background-color: var(--NameBackgroundColor);
    color: var(--NameTextColor);
    /* justify-content: left; */
    justify-content: start;
}

/* category */
:host table.results tr td.category {
    background-color: var(--CategoryBackgroundColor);
    color: var(--CategoryTextColor);
    visibility: var(--categoryVisibility);
}

/* birth */
:host table.results tr td.yob {
    background-color: var(--BirthBackgroundColor);
    color: var(--BirthTextColor);
}

/* team */
:host table.results tr td.club {
    background-color: var(--TeamBackgroundColor);
    color: var(--TeamTextColor);
}

table.results tr td.club div.clubName {
    display:flex;
    align-content:center;
    width: 100%;
    justify-content: space-around;
    flex-wrap: wrap;
}

table.results tr td.club div.clubName div.ellipsis {
    width: var(--teamNameShortLength);
}

/* good cells */
:host table.results tr td.good {
    /* background-color: var(--GoodBackgroundColor); */
    color: var(--GoodTextColor);
}
:host .dark table.results tr td.good {
    font-weight: bold;
    /* margin: 0.2em; */
}

/* bad cells */
:host table.results tr td.fail {
    /* background-color: var(--FailBackgroundColor); */
    color: var(--FailTextColor);
    /* margin: 0.2em; */
}
:host .dark table.results tr td.fail {
    font-weight: bold;
}

/* snatch and c&j ranks */
:host table.results tr td.rank {
    background-color: var(--RankBackgroundColor);
    color: var(--RankTextColor);
    visibility: var(--rankVisibility);
    display: flex;
}

/* snatch and c&j best */
:host table.results tr td.best,
:host table.results tr th.best {
    background-color: var(--BackgroundColor);
    color: var(--TotalTextColor);
    visibility: var(--bestVisibility);
}

/* total rank */
:host table.results tr td.totalRank,
:host table.results tr th.totalRank {
    background-color: var(--TotalRankBackgroundColor);
    color: var(--TotalRankTextColor);
    visibility: var(--totalRankVisibility);
}

/* group */
:host table.results tr td.groupCol,
:host table.results tr th.groupCol
 {
    background-color: var(--StartBackgroundColor);
    color: var(--StartTextColor);
    visibility: var(--startVisibility);
}

/* year of birth */
:host table.results tr td.yob,
:host table.results tr th.yob {
    background-color: var(--BackgroundColor);
    color: var(--TextColor);
    visibility: var(--birthVisibility);
}

/* custom fields */
:host table.results tr td.custom1,
:host table.results tr th.custom1 {
    background-color: var(--BackgroundColor);
    color: var(--TextColor);
    visibility: var(--custom1Visibility);
}

:host table.results tr td.custom2,
:host table.results tr th.custom2 {
    background-color: var(--BackgroundColor);
    color: var(--TextColor);
    visibility: var(--custom2Visibility);
}

/* sinclair */
:host table.results tr td.sinclair,
:host table.results tr th.sinclair {
    background-color: var(--BackgroundColor);
    color: var(--TextColor);
    visibility: var(--sinclairVisibility);
}
:host table.results .nosinclair tr td.sinclair,
:host table.results .nosinclair tr th.sinclair {
    visibility: hidden;
}

/* sinclair rank */
:host table.results tr td.sinclairRank,
:host table.results tr th.sinclairRank {
    background-color: var(--RankBackgroundColor);
    color: var(--RankTextColor);
    visibility: var(--sinclairRankVisibility);
}
:host table.results .nosinclair tr td.sinclairRank,
:host table.results .nosinclair tr th.sinclairRank {
    visibility: hidden;
}

/* total */
:host table.results tr td.total,
:host table.results tr th.total {
    background-color: var(--BackgroundColor);
    color: var(--TotalTextColor);
    visibility: var(--totalVisibility);
    font-weight: bold;
}

/* spacer line above first leader/medalist */
:host table.results tr td.headerSpacer {
    background-color: var(--SpacerBackgroundColor);
    /* padding: 0.4vmin 0.4vmin 0.4vmin 0.4vmin; */
    margin-bottom: 0.01vh;
    /* border-right: 0; */
    border-inline-end: 0;
    border: none;
    max-height: 2px;
}

/* spacer line between categories */
:host table.results tr td.spacer {
    background-color: var(--SpacerBackgroundColor);
    padding: 0.2vmin 0.2vmin 0.2vmin 0.2vmin; /* This is shorthand for all sides, logical */
    /* border-right: 0; */
    border-inline-end: 0;
    border: none;
    max-height: 2px;
}

/* filler space above leaders */
:host table.results tr td.filler {
    background-color: var(--SpacerBackgroundColor);
    grid-column: 1 / -1;
    align-content: stretch;
    border: none;
    margin: 0;
    padding: 0;
    line-height: 90%;
}

/* requested weight column */
:host table.results tr td.request {
    --BlinkBackgroundColor: var(--RequestBackgroundColor);
    background-color: var(--RequestBackgroundColor);
    color: var(--RequestTextColor);
    font-style: italic;
}

/* current athlete colors and blinks */
:host table.results tr.current td {
    color: var(--CurrentTextColor);
    background-color: var(--CurrentBackgroundColor);
    font-weight: bold;
    border: none;
}

/* blinking text is done with a div animation */
:host .dark table.results div.blink {
    animation: blink 2.0s step-start 0s infinite;
}

/* blinking a background is done with the changeColor animation defined below */
:host .light table.results td.blink {
    animation: changeColor 1.5s step-start 0s infinite;
}

/* next athlete colors */
:host table.results tr.next td {
    color: var(--NextTextColor);
    background-color: var(--NextBackgroundColor);
    font-weight: bold;
    border: none
}

/* next athlete colors */
:host table.results tr.next td div.name {
    color: var(--NextHighlightTextColor, var(--NextTextColor));
}
/* next athlete colors */
:host table.results tr.next td div.next {
    color: var(--NextHighlightTextColor, var(--NextTextColor));
}

/* empty cells */
:host table.results tr td.empty {
    color: var(--EmptyTextColor);
    background-color: var(--EmptyBackgroundColor);
    font-style: italic;
}

:host table.results tr.current td.empty {
    color: var(--CurrentTextColor);
    background-color: var(--CurrentBackgroundColor);
    font-weight: bold;
    border: none;
}

:host table.results tr.next td.empty {
    color: var(--NextTextColor);
    background-color: var(--NextBackgroundColor);
    font-weight: bold;
    border: none;
}

/* grid layout */
table {
    /* do NOT use all available vertical space */
    flex: 0;
    display: grid;
    border-collapse: collapse;
    grid-template-rows:
        repeat(var(--top), min-content) repeat(1,var(--leaderFillerHeight)) repeat(var(--bottom), var(--leaderLineHeight));
    grid-template-columns:
        /* start */
        var(--startWidth)
        /* name */
        minmax(50px, var(--nameWidth))
        /* category */
        var(--categoryWidth)
        /* birth */
        var(--birthWidth)
        /* custom fields */
        var(--custom1Width) var(--custom2Width)
        /* team name */
        var(--clubWidth)
        /* snatch results */
        var(--spacerWidth)
        repeat(3, var(--liftResultWidth))
        var(--bestWidth)
        /* one snatch rank per category */
        repeat(var(--nbRanks), var(--rankWidth))
        /* clean&jerk */
        var(--spacerWidth)
        repeat(3, var(--liftResultWidth))
        var(--bestWidth)
        /* one snatch rank per category */
        repeat(var(--nbRanks), var(--rankWidth))
        /* total */
        var(--spacerWidth)
        var(--totalWidth)
        /* one total rank per category */
        repeat(var(--nbRanks), var(--totalRankWidth))
        /* sinclair result */
        var(--sinclairWidth)
        /* sinclair ranks */
        var(--sinclairRankWidth);
}

:host([lang="he"]) table.results,
:host-context(html[lang="he"]) table.results {
    --totalWidth: 8ch;
}

thead,
tbody,
tr {
    display: contents;
}

th,
td {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    display: flex;
    align-content: stretch;
    /* padding-left: calc(var(--tableFontSize)*0.15); */
    /* padding-right: calc(var(--tableFontSize)*0.15); */
    /* padding-top: calc(var(--tableFontSize)*0.1); */
    /* padding-bottom: calc(var(--tableFontSize)*0.1); */
    padding-inline: calc(var(--tableFontSize)*0.15);
    padding-block: calc(var(--tableFontSize)*0.1);
    margin: 0;
}

:host .dark table.results tr.head th.vspacer,
:host .dark table.results tr.head td.vspacer {
    width: var(--spacerWidth);
    /* background-color: var(--blockBackgroundColor); */
    border: none;
}
:host .dark table.results tr th.vspacer,
:host .dark table.results tr td.vspacer {
    width: var(--spacerWidth);
    /* background-color: var(--blockBackgroundColor); */
    border: none;
}

:host .light table.results tr.head th.vspacer,
:host .light table.results tr.head td.vspacer {
    width: var(--spacerWidth);
    background-color: var(--blockBackgroundColor);
    border: none;
}

:host .light table.results tr th.vspacer,
:host .light table.results tr td.vspacer {
    width: var(--spacerWidth);
    background-color: var(--blockBackgroundColor);
    border: none;
}

:host table.results tr.head td,
:host table.results tr.head th {
    justify-content: center;
    align-content: center;
    font-weight: normal;
    /* font-size: var(--tableFontSize); */
    position: relative;
    /* padding-top: 2px; */
    /* padding-bottom: 2px; */
    padding-block: 2px;
    border-style: none;
	background: var(--TitleBackgroundColor);
    color: var(--TitleTextColor);
    border-color: var(--TableBorders);
    margin-bottom: -0.20ex;
}

:host table.results tr.head td.leaderTitle {
    grid-column: 1 / -1;
    /* justify-content: left; */
    justify-content: start;
    font-weight: bold;
	margin-top: -0.9em;
}


@keyframes blink {
  0% { opacity: 1; }  /* Fully visible */
  75% { opacity: 1; }  /* Still fully visible for 75% of the duration */
  76% { opacity: 0; }  /* Instantly invisible */
  100% { opacity: 0; } /* Stays invisible for the remainder of the duration */
}

@keyframes changeColor {
    0% {
        background-color: var(--CurrentBackgroundColor);
    }

    49.9% {
        background-color: var(--CurrentBackgroundColor);
    }

    50% {
        background-color: var(--BlinkBackgroundColor, var(--BackgroundColor));
    }

    100% {
        background-color: var(--BlinkBackgroundColor, var(--BackgroundColor));
    }
}

/* top part formatting */
.attemptBar {
    display: flex;
    font-size: var(--topRowFontSize);
    justify-content: space-between;
    width: 100%;
    background-color: var(--videoHeaderBackgroundColor);
    padding: 0.5em;
}

.attemptBar .startNumber {
    align-self: center;
}

.attemptBar .startNumber span {
    font-size: 70%;
    font-weight: bold;
    border-width: 0.2ex;
    border-style: solid;
    border-color: var(--startNumberBoxColor);
    width: 1.5em;
    display: flex;
    justify-content: center;
    align-self: center;
}

.attemptBar .athleteInfo {
    display: flex;
    gap: 0.5rem;
    font-size: var(--athleteNameFontSize);
    justify-content: space-between;
    align-items: baseline;
    width: 100%;
}

.athleteInfo .fullName {
    font-weight: bold;
    flex: 0 0 35%;
    /* text-align: left; */
    text-align: start;
    flex-grow: 0.5;
    color: var(--athleteNameColor);
    min-height: 1.5em;
    font-size: var(--athleteNameFontSize)
}

.athleteInfo .clubName {
    color: var(--athleteTeamColor);
}

.athleteInfo .attempt {
    color: var(--athleteAttemptColor);
    white-space: nowrap;
}

.athleteInfo .weight {
    color: var(--athleteTimerColor);
    display: flex;
    justify-content: center;
    align-items: baseline;
    white-space: nowrap;
}

.athleteInfo .timer {
    /* flex: 0 0 15%; */
    /* text-align: right; */
    text-align: end;
    font-weight: bold;
    width: 5em;
    height: 1.5em;
    display: flex;
    justify-content: flex-end;
}

.athleteInfo .decisionBox {
    inset-block-start: 1vmin;
    inset-inline-end: 1vmin;
    width: 5em;
    height: 1.5em;
    background-color: transparent;
    display: none;
    align-self: center;
    z-index: 10;
}

.group {
    color: var(--groupInfoColor);
    font-size: var(--groupInfoFontSize);
    /* margin-top: 1vh; */
    /* margin-bottom: 2vh; */
    margin-block-start: 1vh;
    margin-block-end: 2vh;
    padding: 0.5em;
    background-color: var(--videoHeaderBackgroundColor);
    margin-top: -1.0em;
}

.breakTime {
    color: var(--breakTimerColor);
}

.athleteTimer {
    color: white;
    font-family: Consolas,Arial;
}

.hiddenTitle {
    display: none;
}

.bigTitle {
    align-items: center;
    justify-content: center;
    text-align: center;
}

.competitionName {
    font-size: 4em;
}

.nextGroup {
    font-size: 2em;
}

.english {
    font-size: 85%;
}

div.ellipsis {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}


/* records structure */
.recordRow {
    grid-template-columns: repeat(var(--nbRecords), max-content) 1fr;
    grid-column-gap: 1em;
    display: grid;
    grid-auto-flow: column;
    grid-auto-rows: max-content;
    padding: 10px;
    background-color: var(--EmptyBackgroundColor);
}

:host .recordBox {
    grid-gap: 1px;
    display: grid;
	grid-template-columns: repeat(3, var(--recordValueCellWidth));
	grid-template-rows: repeat(4, min-content);
    text-align: center;
    align-items: stretch;
    justify-items: stretch;
    align-self: start;
}
:host .recordBox .recordCat {
    grid-column: 1 / span 3;
}
:host div.recordLiftType {
    line-height: var(--recordTypeHeightRatio);
    padding: 0.1em; /* This is shorthand for all sides, logical */
}
:host div.recordLiftType span.recordLiftType {
    font-size: var(--recordTypeHeightRatio);
}
:host div.recordLiftTypeSpacer {
    line-height: var(--recordTypeHeightRatio);
    padding: 0.1em; /* This is shorthand for all sides, logical */
}
:host div.recordLiftTypeSpacer span.recordLiftTypeSpacer {
    font-size: var(--recordTypeHeightRatio);
}

:host .recordBoxPersonal {
    grid-gap: 1px;
    display: grid;
	grid-template-columns: repeat(3, var(--recordValueCellWidth));
	grid-template-rows: repeat(1, min-content);
    text-align: center;
    align-items: stretch;
    justify-items: stretch;
    align-self: start;
}
:host .recordBoxPersonal .recordCat {
    grid-column: 1 / span 3;
}

:host .recordTitleBlock {
    grid-gap: 1px;
    display: grid;
    grid-template-columns: repeat(1, min-content);
    grid-template-rows: repeat(1, min-content);
    /* text-align: right; */
    text-align: end;
    align-items: stretch;
    justify-items: stretch;
    align-self: start;
}

/* records light theme */
:host .light .recordBox,
:host .light .recordBoxPersonal {
    outline: var(--RecordBoxBorderWidth);
    outline-color: var(--RecordBoxBorder);
    outline-style: solid;
    color: var(--RecordBoxText);
    background-color: var(--RecordBoxBackground);
}
:host .dark .recordBox,
:host .dark .recordBoxPersonal {
    outline-width: var(--RecordBoxBorderWidth);
    outline-color: var(--RecordBoxBorder);
    outline-style: solid;
    color: var(--RecordBoxText);
    background-color: var(--RecordBoxBackground);
}

:host .light .recordBox .recordCat {
    outline-width: var(--RecordCellBorderWidth);
    outline-color: var(--RecordBoxBorder);
    outline-style: solid;
}
:host .dark .recordBox .recordCat {
    outline-width: var(--RecordCellBorderWidth);
    outline-color: var(--RecordBoxBorder);
    outline-style: solid;
}

:host .light .recordCell {
    outline-width: var(--RecordCellBorderWidth);
    outline-color: var(--RecordBoxBorder);
    outline-style: solid;
    height: var(--recordValueCellHeight);
    line-height: var(--recordValueCellHeight);
    background-color: var(--RecordValueBackground);
    color: var(--RecordValueText);

}
:host .dark .recordCell {
    outline-width: var(--RecordCellBorderWidth);
    outline-color: var(--RecordBoxBorder);
    outline-style: solid;
    height: var(--recordValueCellHeight);
    line-height: var(--recordValueCellHeight);
    background-color: var(--RecordValueBackground);
    color: var(--RecordValueText);
	font-size: 115%
}

:host .light div.recordLiftType {
    outline-width: var(--RecordCellBorderWidth);
    outline-color: var(--RecordBoxBorder);
    outline-style: solid;
}
:host .dark div.recordLiftType {
    outline-width: var(--RecordCellBorderWidth);
    outline-color: var(--RecordBoxBorder);
    outline-style: solid;
	font-size: 110%;
	line-height: 110%;
}

:host .light span.recordLiftType {
    height: var(--recordTypeCellHeight);
    background-color: var(--RecordLiftTypeBackground);
    color: var(--RecordLiftTypeText);
}
:host .dark span.recordLiftType {
    height: var(--recordTypeCellHeight);
    background-color: var(--RecordLiftTypeBackground);
    color: var(--RecordLiftTypeText);
}

:host .light span.recordLiftTypeSpacer {
    background-color: var(--RecordNameBackground);
    color: var(--RecordLiftTypeText);
}
:host .dark .recordLiftTypeSpacer {
    background-color: var(--RecordNameBackground);
    color: var(--RecordLiftTypeText);
}

:host .light span.recordLiftType {
    background-color: var(--RecordLiftTypeBackground);
    color: var(--RecordLiftTypeText);
    font-weight: normal;
}
:host .dark span.recordLiftType {
    background-color: var(--RecordLiftTypeBackground);
    color: var(--RecordLiftTypeText);
    font-weight: normal;
}

:host .light .recordsFiller {
    /* text-align: right; */
    text-align: end;
    height: calc(var(--recordValueCellHeight)*1.2);
}
:host .dark .recordsFiller {
    /* text-align: right; */
    text-align: end;
    /* height: calc(var(--recordValueCellHeight)*1.2); */
	height: 1.3em;
}

:host .light .recordCat {
    height: var(--recordValueCellHeight);
    line-height: var(--recordValueCellHeight);
    background-color: var(--RecordBoxBackground);
    color: var(--RecordBoxText);
}
:host .dark .recordCat {
    height: var(--recordValueCellHeight);
    line-height: var(--recordValueCellHeight);
    background-color: var(--RecordBoxBackground);
    color: var(--RecordBoxText);
    font-size: 115%;
}

:host .light .recordName {
    background-color: var(--RecordNameBackground);
    color: var(--RecordNameText);
    height: var(--recordValueCellHeight);
    line-height: var(--recordValueCellHeight);
}
:host .dark .recordName {
    height: var(--recordValueCellHeight);
    line-height: var(--recordValueCellHeight);
    background-color: var(--RecordNameBackground);
    color: var(--RecordNameText);
    font-weight: bold;
    font-size: 115%;
}

:host .light .recordTitle {
    background-color: var(--RecordNameBackground);
    height: var(--recordValueCellHeight);
    line-height: var(--recordValueCellHeight);
    color: var(--RecordNameText);
}
:host .dark .recordTitle {
    height: var(--recordValueCellHeight);
    line-height: var(--recordValueCellHeight);
    background-color: var(--RecordNameBackground);
    color: var(--RecordNameText);
}

:host .light .highlight {
    background-color: var(--AttemptHighlightBackground) !important;
    color: var(--RecordValueText) !important;
}
:host .dark .highlight {
    background-color: var(--AttemptHighlightBackground) !important;
    color: var(--RecordValueText) !important;
}

/* record notifications */
.recordNotification {
    align-items: center;
    justify-content: center;
    display: flex;
    height: 100%;
    font-size: var(--recordsNotificationFontSize);
    outline-style: solid;
    outline-width: medium;
}

:host .dark .recordNotification.new {
    background-color: var(--RecordHighlightBackground);
    outline-color: var(--RecordHighlightBackground);
    color: var(--RecordHighlightText);
    z-index: var(--zIndexRecordNotifications);
    font-weight: bold;
}
:host .light .recordNotification.new {
    background-color: var(--RecordHighlightBackground);
    outline-color: var(--RecordHighlightBackground);
    color: var(--RecordHighlightText);
    z-index: var(--zIndexRecordNotifications);
}

:host .dark .recordNotification.attempt {
    background-color: var(--AttemptHighlightBackground);
    outline-color: var(--AttemptHighlightBackground);
    color: var(--AttemptHighlightText);
    z-index: var(--zIndexRecordNotifications);
    font-weight: bold;
}
:host .light .recordNotification.attempt {
    background-color: var(--AttemptHighlightBackground);
    outline-color: var(--AttemptHighlightBackground);
    color: var(--AttemptHighlightText);
    z-index: var(--zIndexRecordNotifications);
}

.recordNotification.none {
    z-index: -10;
}
